name: CI

on:
  push:
    branches:
      - "production"
      - "staging"
    # paths:
    #   - "packages/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      apps-docs: ${{ steps.filter.outputs.apps.docs }}
      pkg-eslint-config: ${{ steps.filter.outputs.packages.eslint-config }}
      pkg-ui: ${{ steps.filter.outputs.packages.ui }}
      apps-web: ${{ steps.filter.outputs.apps.web }}
    steps:
      - name: "Detect Changes in Mono Repo"
        uses: dorny/paths-filter@v2
        id: filter
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            apps-docs:
              - apps/docs/**
            apps-web:
              - apps/web/**
            pkg-eslint-config:
              - packages/eslint-config/**
            pkg-ui:
              - packages/ui/**

  apps-docs:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.apps.docs == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [18.x]
        pnpm-version: [7.x]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CI: true

      - name: Build
        run: pnpm run build
        env:
          NODE_ENV: production

  pkg-eslint-config:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.pkg-eslint-config == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [18.x]
        pnpm-version: [7.x]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CI: true

      - name: Format
        run: pnpm run format

      - name: Lint
        run: pnpm run lint

      - name: Build
        run: pnpm run build
        env:
          NODE_ENV: production

  pkg-ui:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.pkg-ui == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [18.x]
        pnpm-version: [7.x]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CI: true

      - name: Format
        run: pnpm run format

      - name: Lint
        run: pnpm run lint

      - name: Build
        run: pnpm run build
        env:
          NODE_ENV: production

  apps-web:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.apps.web == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [18.x]
        pnpm-version: [7.x]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CI: true

      - name: Build
        run: pnpm run build
        env:
          NODE_ENV: production
